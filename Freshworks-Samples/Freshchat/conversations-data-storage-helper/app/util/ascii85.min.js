/* istanbul ignore file */
/* eslint-disable */
!(function (t) {
  if ("object" == typeof exports && "undefined" != typeof module)
    module.exports = t();
  else if ("function" == typeof define && define.amd) define([], t);
  else {
    ("undefined" != typeof window
      ? window
      : "undefined" != typeof global
      ? global
      : "undefined" != typeof self
      ? self
      : this
    ).ascii85 = t();
  }
})(function () {
  return (function t(r, e, n) {
    function i(f, u) {
      if (!e[f]) {
        if (!r[f]) {
          var s = "function" == typeof require && require;
          if (!u && s) return s(f, !0);
          if (o) return o(f, !0);
          var a = new Error("Cannot find module '" + f + "'");
          throw ((a.code = "MODULE_NOT_FOUND"), a);
        }
        var h = (e[f] = { exports: {} });
        r[f][0].call(
          h.exports,
          function (t) {
            return i(r[f][1][t] || t);
          },
          h,
          h.exports,
          t,
          r,
          e,
          n
        );
      }
      return e[f].exports;
    }
    for (
      var o = "function" == typeof require && require, f = 0;
      f < n.length;
      f++
    )
      i(n[f]);
    return i;
  })(
    {
      1: [
        function (t, r, e) {
          "use strict";
          (e.byteLength = function (t) {
            var r = a(t),
              e = r[0],
              n = r[1];
            return (3 * (e + n)) / 4 - n;
          }),
            (e.toByteArray = function (t) {
              var r,
                e,
                n = a(t),
                f = n[0],
                u = n[1],
                s = new o(
                  (function (t, r, e) {
                    return (3 * (r + e)) / 4 - e;
                  })(0, f, u)
                ),
                h = 0,
                c = u > 0 ? f - 4 : f;
              for (e = 0; e < c; e += 4)
                (r =
                  (i[t.charCodeAt(e)] << 18) |
                  (i[t.charCodeAt(e + 1)] << 12) |
                  (i[t.charCodeAt(e + 2)] << 6) |
                  i[t.charCodeAt(e + 3)]),
                  (s[h++] = (r >> 16) & 255),
                  (s[h++] = (r >> 8) & 255),
                  (s[h++] = 255 & r);
              2 === u &&
                ((r =
                  (i[t.charCodeAt(e)] << 2) | (i[t.charCodeAt(e + 1)] >> 4)),
                (s[h++] = 255 & r));
              1 === u &&
                ((r =
                  (i[t.charCodeAt(e)] << 10) |
                  (i[t.charCodeAt(e + 1)] << 4) |
                  (i[t.charCodeAt(e + 2)] >> 2)),
                (s[h++] = (r >> 8) & 255),
                (s[h++] = 255 & r));
              return s;
            }),
            (e.fromByteArray = function (t) {
              for (
                var r, e = t.length, i = e % 3, o = [], f = 0, u = e - i;
                f < u;
                f += 16383
              )
                o.push(h(t, f, f + 16383 > u ? u : f + 16383));
              1 === i
                ? ((r = t[e - 1]), o.push(n[r >> 2] + n[(r << 4) & 63] + "=="))
                : 2 === i &&
                  ((r = (t[e - 2] << 8) + t[e - 1]),
                  o.push(
                    n[r >> 10] + n[(r >> 4) & 63] + n[(r << 2) & 63] + "="
                  ));
              return o.join("");
            });
          for (
            var n = [],
              i = [],
              o = "undefined" != typeof Uint8Array ? Uint8Array : Array,
              f =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
              u = 0,
              s = f.length;
            u < s;
            ++u
          )
            (n[u] = f[u]), (i[f.charCodeAt(u)] = u);
          function a(t) {
            var r = t.length;
            if (r % 4 > 0)
              throw new Error("Invalid string. Length must be a multiple of 4");
            var e = t.indexOf("=");
            return -1 === e && (e = r), [e, e === r ? 0 : 4 - (e % 4)];
          }
          function h(t, r, e) {
            for (var i, o, f = [], u = r; u < e; u += 3)
              (i =
                ((t[u] << 16) & 16711680) +
                ((t[u + 1] << 8) & 65280) +
                (255 & t[u + 2])),
                f.push(
                  n[((o = i) >> 18) & 63] +
                    n[(o >> 12) & 63] +
                    n[(o >> 6) & 63] +
                    n[63 & o]
                );
            return f.join("");
          }
          (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
        },
        {},
      ],
      2: [
        function (t, r, e) {
          (function (r) {
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author   Feross Aboukhadijeh <https://feross.org>
             * @license  MIT
             */
            "use strict";
            var n = t("base64-js"),
              i = t("ieee754"),
              o =
                "function" == typeof Symbol && "function" == typeof Symbol.for
                  ? Symbol.for("nodejs.util.inspect.custom")
                  : null;
            (e.Buffer = r),
              (e.SlowBuffer = function (t) {
                +t != t && (t = 0);
                return r.alloc(+t);
              }),
              (e.INSPECT_MAX_BYTES = 50);
            var f = 2147483647;
            function u(t) {
              if (t > f)
                throw new RangeError(
                  'The value "' + t + '" is invalid for option "size"'
                );
              var e = new Uint8Array(t);
              return Object.setPrototypeOf(e, r.prototype), e;
            }
            function r(t, r, e) {
              if ("number" == typeof t) {
                if ("string" == typeof r)
                  throw new TypeError(
                    'The "string" argument must be of type string. Received type number'
                  );
                return h(t);
              }
              return s(t, r, e);
            }
            function s(t, e, n) {
              if ("string" == typeof t)
                return (function (t, e) {
                  ("string" == typeof e && "" !== e) || (e = "utf8");
                  if (!r.isEncoding(e))
                    throw new TypeError("Unknown encoding: " + e);
                  var n = 0 | p(t, e),
                    i = u(n),
                    o = i.write(t, e);
                  o !== n && (i = i.slice(0, o));
                  return i;
                })(t, e);
              if (ArrayBuffer.isView(t)) return c(t);
              if (null == t)
                throw new TypeError(
                  "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                    typeof t
                );
              if (D(t, ArrayBuffer) || (t && D(t.buffer, ArrayBuffer)))
                return (function (t, e, n) {
                  if (e < 0 || t.byteLength < e)
                    throw new RangeError(
                      '"offset" is outside of buffer bounds'
                    );
                  if (t.byteLength < e + (n || 0))
                    throw new RangeError(
                      '"length" is outside of buffer bounds'
                    );
                  var i;
                  i =
                    void 0 === e && void 0 === n
                      ? new Uint8Array(t)
                      : void 0 === n
                      ? new Uint8Array(t, e)
                      : new Uint8Array(t, e, n);
                  return Object.setPrototypeOf(i, r.prototype), i;
                })(t, e, n);
              if ("number" == typeof t)
                throw new TypeError(
                  'The "value" argument must not be of type number. Received type number'
                );
              var i = t.valueOf && t.valueOf();
              if (null != i && i !== t) return r.from(i, e, n);
              var o = (function (t) {
                if (r.isBuffer(t)) {
                  var e = 0 | l(t.length),
                    n = u(e);
                  return 0 === n.length ? n : (t.copy(n, 0, 0, e), n);
                }
                if (void 0 !== t.length)
                  return "number" != typeof t.length || q(t.length)
                    ? u(0)
                    : c(t);
                if ("Buffer" === t.type && Array.isArray(t.data))
                  return c(t.data);
              })(t);
              if (o) return o;
              if (
                "undefined" != typeof Symbol &&
                null != Symbol.toPrimitive &&
                "function" == typeof t[Symbol.toPrimitive]
              )
                return r.from(t[Symbol.toPrimitive]("string"), e, n);
              throw new TypeError(
                "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                  typeof t
              );
            }
            function a(t) {
              if ("number" != typeof t)
                throw new TypeError('"size" argument must be of type number');
              if (t < 0)
                throw new RangeError(
                  'The value "' + t + '" is invalid for option "size"'
                );
            }
            function h(t) {
              return a(t), u(t < 0 ? 0 : 0 | l(t));
            }
            function c(t) {
              for (
                var r = t.length < 0 ? 0 : 0 | l(t.length), e = u(r), n = 0;
                n < r;
                n += 1
              )
                e[n] = 255 & t[n];
              return e;
            }
            function l(t) {
              if (t >= f)
                throw new RangeError(
                  "Attempt to allocate Buffer larger than maximum size: 0x" +
                    f.toString(16) +
                    " bytes"
                );
              return 0 | t;
            }
            function p(t, e) {
              if (r.isBuffer(t)) return t.length;
              if (ArrayBuffer.isView(t) || D(t, ArrayBuffer))
                return t.byteLength;
              if ("string" != typeof t)
                throw new TypeError(
                  'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                    typeof t
                );
              var n = t.length,
                i = arguments.length > 2 && !0 === arguments[2];
              if (!i && 0 === n) return 0;
              for (var o = !1; ; )
                switch (e) {
                  case "ascii":
                  case "latin1":
                  case "binary":
                    return n;
                  case "utf8":
                  case "utf-8":
                    return _(t).length;
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return 2 * n;
                  case "hex":
                    return n >>> 1;
                  case "base64":
                    return N(t).length;
                  default:
                    if (o) return i ? -1 : _(t).length;
                    (e = ("" + e).toLowerCase()), (o = !0);
                }
            }
            function y(t, r, e) {
              var n = !1;
              if (((void 0 === r || r < 0) && (r = 0), r > this.length))
                return "";
              if (
                ((void 0 === e || e > this.length) && (e = this.length), e <= 0)
              )
                return "";
              if ((e >>>= 0) <= (r >>>= 0)) return "";
              for (t || (t = "utf8"); ; )
                switch (t) {
                  case "hex":
                    return O(this, r, e);
                  case "utf8":
                  case "utf-8":
                    return I(this, r, e);
                  case "ascii":
                    return C(this, r, e);
                  case "latin1":
                  case "binary":
                    return S(this, r, e);
                  case "base64":
                    return U(this, r, e);
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return L(this, r, e);
                  default:
                    if (n) throw new TypeError("Unknown encoding: " + t);
                    (t = (t + "").toLowerCase()), (n = !0);
                }
            }
            function g(t, r, e) {
              var n = t[r];
              (t[r] = t[e]), (t[e] = n);
            }
            function d(t, e, n, i, o) {
              if (0 === t.length) return -1;
              if (
                ("string" == typeof n
                  ? ((i = n), (n = 0))
                  : n > 2147483647
                  ? (n = 2147483647)
                  : n < -2147483648 && (n = -2147483648),
                q((n = +n)) && (n = o ? 0 : t.length - 1),
                n < 0 && (n = t.length + n),
                n >= t.length)
              ) {
                if (o) return -1;
                n = t.length - 1;
              } else if (n < 0) {
                if (!o) return -1;
                n = 0;
              }
              if (("string" == typeof e && (e = r.from(e, i)), r.isBuffer(e)))
                return 0 === e.length ? -1 : w(t, e, n, i, o);
              if ("number" == typeof e)
                return (
                  (e &= 255),
                  "function" == typeof Uint8Array.prototype.indexOf
                    ? o
                      ? Uint8Array.prototype.indexOf.call(t, e, n)
                      : Uint8Array.prototype.lastIndexOf.call(t, e, n)
                    : w(t, [e], n, i, o)
                );
              throw new TypeError("val must be string, number or Buffer");
            }
            function w(t, r, e, n, i) {
              var o,
                f = 1,
                u = t.length,
                s = r.length;
              if (
                void 0 !== n &&
                ("ucs2" === (n = String(n).toLowerCase()) ||
                  "ucs-2" === n ||
                  "utf16le" === n ||
                  "utf-16le" === n)
              ) {
                if (t.length < 2 || r.length < 2) return -1;
                (f = 2), (u /= 2), (s /= 2), (e /= 2);
              }
              function a(t, r) {
                return 1 === f ? t[r] : t.readUInt16BE(r * f);
              }
              if (i) {
                var h = -1;
                for (o = e; o < u; o++)
                  if (a(t, o) === a(r, -1 === h ? 0 : o - h)) {
                    if ((-1 === h && (h = o), o - h + 1 === s)) return h * f;
                  } else -1 !== h && (o -= o - h), (h = -1);
              } else
                for (e + s > u && (e = u - s), o = e; o >= 0; o--) {
                  for (var c = !0, l = 0; l < s; l++)
                    if (a(t, o + l) !== a(r, l)) {
                      c = !1;
                      break;
                    }
                  if (c) return o;
                }
              return -1;
            }
            function v(t, r, e, n) {
              e = Number(e) || 0;
              var i = t.length - e;
              n ? (n = Number(n)) > i && (n = i) : (n = i);
              var o = r.length;
              n > o / 2 && (n = o / 2);
              for (var f = 0; f < n; ++f) {
                var u = parseInt(r.substr(2 * f, 2), 16);
                if (q(u)) return f;
                t[e + f] = u;
              }
              return f;
            }
            function b(t, r, e, n) {
              return z(_(r, t.length - e), t, e, n);
            }
            function m(t, r, e, n) {
              return z(
                (function (t) {
                  for (var r = [], e = 0; e < t.length; ++e)
                    r.push(255 & t.charCodeAt(e));
                  return r;
                })(r),
                t,
                e,
                n
              );
            }
            function E(t, r, e, n) {
              return m(t, r, e, n);
            }
            function A(t, r, e, n) {
              return z(N(r), t, e, n);
            }
            function B(t, r, e, n) {
              return z(
                (function (t, r) {
                  for (
                    var e, n, i, o = [], f = 0;
                    f < t.length && !((r -= 2) < 0);
                    ++f
                  )
                    (e = t.charCodeAt(f)),
                      (n = e >> 8),
                      (i = e % 256),
                      o.push(i),
                      o.push(n);
                  return o;
                })(r, t.length - e),
                t,
                e,
                n
              );
            }
            function U(t, r, e) {
              return 0 === r && e === t.length
                ? n.fromByteArray(t)
                : n.fromByteArray(t.slice(r, e));
            }
            function I(t, r, e) {
              e = Math.min(t.length, e);
              for (var n = [], i = r; i < e; ) {
                var o,
                  f,
                  u,
                  s,
                  a = t[i],
                  h = null,
                  c = a > 239 ? 4 : a > 223 ? 3 : a > 191 ? 2 : 1;
                if (i + c <= e)
                  switch (c) {
                    case 1:
                      a < 128 && (h = a);
                      break;
                    case 2:
                      128 == (192 & (o = t[i + 1])) &&
                        (s = ((31 & a) << 6) | (63 & o)) > 127 &&
                        (h = s);
                      break;
                    case 3:
                      (o = t[i + 1]),
                        (f = t[i + 2]),
                        128 == (192 & o) &&
                          128 == (192 & f) &&
                          (s = ((15 & a) << 12) | ((63 & o) << 6) | (63 & f)) >
                            2047 &&
                          (s < 55296 || s > 57343) &&
                          (h = s);
                      break;
                    case 4:
                      (o = t[i + 1]),
                        (f = t[i + 2]),
                        (u = t[i + 3]),
                        128 == (192 & o) &&
                          128 == (192 & f) &&
                          128 == (192 & u) &&
                          (s =
                            ((15 & a) << 18) |
                            ((63 & o) << 12) |
                            ((63 & f) << 6) |
                            (63 & u)) > 65535 &&
                          s < 1114112 &&
                          (h = s);
                  }
                null === h
                  ? ((h = 65533), (c = 1))
                  : h > 65535 &&
                    ((h -= 65536),
                    n.push(((h >>> 10) & 1023) | 55296),
                    (h = 56320 | (1023 & h))),
                  n.push(h),
                  (i += c);
              }
              return (function (t) {
                var r = t.length;
                if (r <= T) return String.fromCharCode.apply(String, t);
                var e = "",
                  n = 0;
                for (; n < r; )
                  e += String.fromCharCode.apply(String, t.slice(n, (n += T)));
                return e;
              })(n);
            }
            (e.kMaxLength = f),
              (r.TYPED_ARRAY_SUPPORT = (function () {
                try {
                  var t = new Uint8Array(1),
                    r = {
                      foo: function () {
                        return 42;
                      },
                    };
                  return (
                    Object.setPrototypeOf(r, Uint8Array.prototype),
                    Object.setPrototypeOf(t, r),
                    42 === t.foo()
                  );
                } catch (t) {
                  return !1;
                }
              })()),
              r.TYPED_ARRAY_SUPPORT ||
                "undefined" == typeof console ||
                "function" != typeof console.error ||
                console.error(
                  "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
                ),
              Object.defineProperty(r.prototype, "parent", {
                enumerable: !0,
                get: function () {
                  if (r.isBuffer(this)) return this.buffer;
                },
              }),
              Object.defineProperty(r.prototype, "offset", {
                enumerable: !0,
                get: function () {
                  if (r.isBuffer(this)) return this.byteOffset;
                },
              }),
              "undefined" != typeof Symbol &&
                null != Symbol.species &&
                r[Symbol.species] === r &&
                Object.defineProperty(r, Symbol.species, {
                  value: null,
                  configurable: !0,
                  enumerable: !1,
                  writable: !1,
                }),
              (r.poolSize = 8192),
              (r.from = function (t, r, e) {
                return s(t, r, e);
              }),
              Object.setPrototypeOf(r.prototype, Uint8Array.prototype),
              Object.setPrototypeOf(r, Uint8Array),
              (r.alloc = function (t, r, e) {
                return (function (t, r, e) {
                  return (
                    a(t),
                    t <= 0
                      ? u(t)
                      : void 0 !== r
                      ? "string" == typeof e
                        ? u(t).fill(r, e)
                        : u(t).fill(r)
                      : u(t)
                  );
                })(t, r, e);
              }),
              (r.allocUnsafe = function (t) {
                return h(t);
              }),
              (r.allocUnsafeSlow = function (t) {
                return h(t);
              }),
              (r.isBuffer = function (t) {
                return null != t && !0 === t._isBuffer && t !== r.prototype;
              }),
              (r.compare = function (t, e) {
                if (
                  (D(t, Uint8Array) && (t = r.from(t, t.offset, t.byteLength)),
                  D(e, Uint8Array) && (e = r.from(e, e.offset, e.byteLength)),
                  !r.isBuffer(t) || !r.isBuffer(e))
                )
                  throw new TypeError(
                    'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
                  );
                if (t === e) return 0;
                for (
                  var n = t.length, i = e.length, o = 0, f = Math.min(n, i);
                  o < f;
                  ++o
                )
                  if (t[o] !== e[o]) {
                    (n = t[o]), (i = e[o]);
                    break;
                  }
                return n < i ? -1 : i < n ? 1 : 0;
              }),
              (r.isEncoding = function (t) {
                switch (String(t).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return !0;
                  default:
                    return !1;
                }
              }),
              (r.concat = function (t, e) {
                if (!Array.isArray(t))
                  throw new TypeError(
                    '"list" argument must be an Array of Buffers'
                  );
                if (0 === t.length) return r.alloc(0);
                var n;
                if (void 0 === e)
                  for (e = 0, n = 0; n < t.length; ++n) e += t[n].length;
                var i = r.allocUnsafe(e),
                  o = 0;
                for (n = 0; n < t.length; ++n) {
                  var f = t[n];
                  if ((D(f, Uint8Array) && (f = r.from(f)), !r.isBuffer(f)))
                    throw new TypeError(
                      '"list" argument must be an Array of Buffers'
                    );
                  f.copy(i, o), (o += f.length);
                }
                return i;
              }),
              (r.byteLength = p),
              (r.prototype._isBuffer = !0),
              (r.prototype.swap16 = function () {
                var t = this.length;
                if (t % 2 != 0)
                  throw new RangeError(
                    "Buffer size must be a multiple of 16-bits"
                  );
                for (var r = 0; r < t; r += 2) g(this, r, r + 1);
                return this;
              }),
              (r.prototype.swap32 = function () {
                var t = this.length;
                if (t % 4 != 0)
                  throw new RangeError(
                    "Buffer size must be a multiple of 32-bits"
                  );
                for (var r = 0; r < t; r += 4)
                  g(this, r, r + 3), g(this, r + 1, r + 2);
                return this;
              }),
              (r.prototype.swap64 = function () {
                var t = this.length;
                if (t % 8 != 0)
                  throw new RangeError(
                    "Buffer size must be a multiple of 64-bits"
                  );
                for (var r = 0; r < t; r += 8)
                  g(this, r, r + 7),
                    g(this, r + 1, r + 6),
                    g(this, r + 2, r + 5),
                    g(this, r + 3, r + 4);
                return this;
              }),
              (r.prototype.toString = function () {
                var t = this.length;
                return 0 === t
                  ? ""
                  : 0 === arguments.length
                  ? I(this, 0, t)
                  : y.apply(this, arguments);
              }),
              (r.prototype.toLocaleString = r.prototype.toString),
              (r.prototype.equals = function (t) {
                if (!r.isBuffer(t))
                  throw new TypeError("Argument must be a Buffer");
                return this === t || 0 === r.compare(this, t);
              }),
              (r.prototype.inspect = function () {
                var t = "",
                  r = e.INSPECT_MAX_BYTES;
                return (
                  (t = this.toString("hex", 0, r)
                    .replace(/(.{2})/g, "$1 ")
                    .trim()),
                  this.length > r && (t += " ... "),
                  "<Buffer " + t + ">"
                );
              }),
              o && (r.prototype[o] = r.prototype.inspect),
              (r.prototype.compare = function (t, e, n, i, o) {
                if (
                  (D(t, Uint8Array) && (t = r.from(t, t.offset, t.byteLength)),
                  !r.isBuffer(t))
                )
                  throw new TypeError(
                    'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                      typeof t
                  );
                if (
                  (void 0 === e && (e = 0),
                  void 0 === n && (n = t ? t.length : 0),
                  void 0 === i && (i = 0),
                  void 0 === o && (o = this.length),
                  e < 0 || n > t.length || i < 0 || o > this.length)
                )
                  throw new RangeError("out of range index");
                if (i >= o && e >= n) return 0;
                if (i >= o) return -1;
                if (e >= n) return 1;
                if (this === t) return 0;
                for (
                  var f = (o >>>= 0) - (i >>>= 0),
                    u = (n >>>= 0) - (e >>>= 0),
                    s = Math.min(f, u),
                    a = this.slice(i, o),
                    h = t.slice(e, n),
                    c = 0;
                  c < s;
                  ++c
                )
                  if (a[c] !== h[c]) {
                    (f = a[c]), (u = h[c]);
                    break;
                  }
                return f < u ? -1 : u < f ? 1 : 0;
              }),
              (r.prototype.includes = function (t, r, e) {
                return -1 !== this.indexOf(t, r, e);
              }),
              (r.prototype.indexOf = function (t, r, e) {
                return d(this, t, r, e, !0);
              }),
              (r.prototype.lastIndexOf = function (t, r, e) {
                return d(this, t, r, e, !1);
              }),
              (r.prototype.write = function (t, r, e, n) {
                if (void 0 === r) (n = "utf8"), (e = this.length), (r = 0);
                else if (void 0 === e && "string" == typeof r)
                  (n = r), (e = this.length), (r = 0);
                else {
                  if (!isFinite(r))
                    throw new Error(
                      "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                    );
                  (r >>>= 0),
                    isFinite(e)
                      ? ((e >>>= 0), void 0 === n && (n = "utf8"))
                      : ((n = e), (e = void 0));
                }
                var i = this.length - r;
                if (
                  ((void 0 === e || e > i) && (e = i),
                  (t.length > 0 && (e < 0 || r < 0)) || r > this.length)
                )
                  throw new RangeError(
                    "Attempt to write outside buffer bounds"
                  );
                n || (n = "utf8");
                for (var o = !1; ; )
                  switch (n) {
                    case "hex":
                      return v(this, t, r, e);
                    case "utf8":
                    case "utf-8":
                      return b(this, t, r, e);
                    case "ascii":
                      return m(this, t, r, e);
                    case "latin1":
                    case "binary":
                      return E(this, t, r, e);
                    case "base64":
                      return A(this, t, r, e);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return B(this, t, r, e);
                    default:
                      if (o) throw new TypeError("Unknown encoding: " + n);
                      (n = ("" + n).toLowerCase()), (o = !0);
                  }
              }),
              (r.prototype.toJSON = function () {
                return {
                  type: "Buffer",
                  data: Array.prototype.slice.call(this._arr || this, 0),
                };
              });
            var T = 4096;
            function C(t, r, e) {
              var n = "";
              e = Math.min(t.length, e);
              for (var i = r; i < e; ++i) n += String.fromCharCode(127 & t[i]);
              return n;
            }
            function S(t, r, e) {
              var n = "";
              e = Math.min(t.length, e);
              for (var i = r; i < e; ++i) n += String.fromCharCode(t[i]);
              return n;
            }
            function O(t, r, e) {
              var n = t.length;
              (!r || r < 0) && (r = 0), (!e || e < 0 || e > n) && (e = n);
              for (var i = "", o = r; o < e; ++o) i += F[t[o]];
              return i;
            }
            function L(t, r, e) {
              for (var n = t.slice(r, e), i = "", o = 0; o < n.length; o += 2)
                i += String.fromCharCode(n[o] + 256 * n[o + 1]);
              return i;
            }
            function x(t, r, e) {
              if (t % 1 != 0 || t < 0)
                throw new RangeError("offset is not uint");
              if (t + r > e)
                throw new RangeError("Trying to access beyond buffer length");
            }
            function R(t, e, n, i, o, f) {
              if (!r.isBuffer(t))
                throw new TypeError(
                  '"buffer" argument must be a Buffer instance'
                );
              if (e > o || e < f)
                throw new RangeError('"value" argument is out of bounds');
              if (n + i > t.length) throw new RangeError("Index out of range");
            }
            function M(t, r, e, n, i, o) {
              if (e + n > t.length) throw new RangeError("Index out of range");
              if (e < 0) throw new RangeError("Index out of range");
            }
            function P(t, r, e, n, o) {
              return (
                (r = +r),
                (e >>>= 0),
                o || M(t, 0, e, 4),
                i.write(t, r, e, n, 23, 4),
                e + 4
              );
            }
            function j(t, r, e, n, o) {
              return (
                (r = +r),
                (e >>>= 0),
                o || M(t, 0, e, 8),
                i.write(t, r, e, n, 52, 8),
                e + 8
              );
            }
            (r.prototype.slice = function (t, e) {
              var n = this.length;
              (t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n),
                (e = void 0 === e ? n : ~~e) < 0
                  ? (e += n) < 0 && (e = 0)
                  : e > n && (e = n),
                e < t && (e = t);
              var i = this.subarray(t, e);
              return Object.setPrototypeOf(i, r.prototype), i;
            }),
              (r.prototype.readUIntLE = function (t, r, e) {
                (t >>>= 0), (r >>>= 0), e || x(t, r, this.length);
                for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256); )
                  n += this[t + o] * i;
                return n;
              }),
              (r.prototype.readUIntBE = function (t, r, e) {
                (t >>>= 0), (r >>>= 0), e || x(t, r, this.length);
                for (var n = this[t + --r], i = 1; r > 0 && (i *= 256); )
                  n += this[t + --r] * i;
                return n;
              }),
              (r.prototype.readUInt8 = function (t, r) {
                return (t >>>= 0), r || x(t, 1, this.length), this[t];
              }),
              (r.prototype.readUInt16LE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 2, this.length),
                  this[t] | (this[t + 1] << 8)
                );
              }),
              (r.prototype.readUInt16BE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 2, this.length),
                  (this[t] << 8) | this[t + 1]
                );
              }),
              (r.prototype.readUInt32LE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 4, this.length),
                  (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
                    16777216 * this[t + 3]
                );
              }),
              (r.prototype.readUInt32BE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 4, this.length),
                  16777216 * this[t] +
                    ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
                );
              }),
              (r.prototype.readIntLE = function (t, r, e) {
                (t >>>= 0), (r >>>= 0), e || x(t, r, this.length);
                for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256); )
                  n += this[t + o] * i;
                return n >= (i *= 128) && (n -= Math.pow(2, 8 * r)), n;
              }),
              (r.prototype.readIntBE = function (t, r, e) {
                (t >>>= 0), (r >>>= 0), e || x(t, r, this.length);
                for (var n = r, i = 1, o = this[t + --n]; n > 0 && (i *= 256); )
                  o += this[t + --n] * i;
                return o >= (i *= 128) && (o -= Math.pow(2, 8 * r)), o;
              }),
              (r.prototype.readInt8 = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 1, this.length),
                  128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
                );
              }),
              (r.prototype.readInt16LE = function (t, r) {
                (t >>>= 0), r || x(t, 2, this.length);
                var e = this[t] | (this[t + 1] << 8);
                return 32768 & e ? 4294901760 | e : e;
              }),
              (r.prototype.readInt16BE = function (t, r) {
                (t >>>= 0), r || x(t, 2, this.length);
                var e = this[t + 1] | (this[t] << 8);
                return 32768 & e ? 4294901760 | e : e;
              }),
              (r.prototype.readInt32LE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 4, this.length),
                  this[t] |
                    (this[t + 1] << 8) |
                    (this[t + 2] << 16) |
                    (this[t + 3] << 24)
                );
              }),
              (r.prototype.readInt32BE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 4, this.length),
                  (this[t] << 24) |
                    (this[t + 1] << 16) |
                    (this[t + 2] << 8) |
                    this[t + 3]
                );
              }),
              (r.prototype.readFloatLE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 4, this.length),
                  i.read(this, t, !0, 23, 4)
                );
              }),
              (r.prototype.readFloatBE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 4, this.length),
                  i.read(this, t, !1, 23, 4)
                );
              }),
              (r.prototype.readDoubleLE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 8, this.length),
                  i.read(this, t, !0, 52, 8)
                );
              }),
              (r.prototype.readDoubleBE = function (t, r) {
                return (
                  (t >>>= 0),
                  r || x(t, 8, this.length),
                  i.read(this, t, !1, 52, 8)
                );
              }),
              (r.prototype.writeUIntLE = function (t, r, e, n) {
                ((t = +t), (r >>>= 0), (e >>>= 0), n) ||
                  R(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);
                var i = 1,
                  o = 0;
                for (this[r] = 255 & t; ++o < e && (i *= 256); )
                  this[r + o] = (t / i) & 255;
                return r + e;
              }),
              (r.prototype.writeUIntBE = function (t, r, e, n) {
                ((t = +t), (r >>>= 0), (e >>>= 0), n) ||
                  R(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);
                var i = e - 1,
                  o = 1;
                for (this[r + i] = 255 & t; --i >= 0 && (o *= 256); )
                  this[r + i] = (t / o) & 255;
                return r + e;
              }),
              (r.prototype.writeUInt8 = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 1, 255, 0),
                  (this[r] = 255 & t),
                  r + 1
                );
              }),
              (r.prototype.writeUInt16LE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 2, 65535, 0),
                  (this[r] = 255 & t),
                  (this[r + 1] = t >>> 8),
                  r + 2
                );
              }),
              (r.prototype.writeUInt16BE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 2, 65535, 0),
                  (this[r] = t >>> 8),
                  (this[r + 1] = 255 & t),
                  r + 2
                );
              }),
              (r.prototype.writeUInt32LE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 4, 4294967295, 0),
                  (this[r + 3] = t >>> 24),
                  (this[r + 2] = t >>> 16),
                  (this[r + 1] = t >>> 8),
                  (this[r] = 255 & t),
                  r + 4
                );
              }),
              (r.prototype.writeUInt32BE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 4, 4294967295, 0),
                  (this[r] = t >>> 24),
                  (this[r + 1] = t >>> 16),
                  (this[r + 2] = t >>> 8),
                  (this[r + 3] = 255 & t),
                  r + 4
                );
              }),
              (r.prototype.writeIntLE = function (t, r, e, n) {
                if (((t = +t), (r >>>= 0), !n)) {
                  var i = Math.pow(2, 8 * e - 1);
                  R(this, t, r, e, i - 1, -i);
                }
                var o = 0,
                  f = 1,
                  u = 0;
                for (this[r] = 255 & t; ++o < e && (f *= 256); )
                  t < 0 && 0 === u && 0 !== this[r + o - 1] && (u = 1),
                    (this[r + o] = (((t / f) >> 0) - u) & 255);
                return r + e;
              }),
              (r.prototype.writeIntBE = function (t, r, e, n) {
                if (((t = +t), (r >>>= 0), !n)) {
                  var i = Math.pow(2, 8 * e - 1);
                  R(this, t, r, e, i - 1, -i);
                }
                var o = e - 1,
                  f = 1,
                  u = 0;
                for (this[r + o] = 255 & t; --o >= 0 && (f *= 256); )
                  t < 0 && 0 === u && 0 !== this[r + o + 1] && (u = 1),
                    (this[r + o] = (((t / f) >> 0) - u) & 255);
                return r + e;
              }),
              (r.prototype.writeInt8 = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 1, 127, -128),
                  t < 0 && (t = 255 + t + 1),
                  (this[r] = 255 & t),
                  r + 1
                );
              }),
              (r.prototype.writeInt16LE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 2, 32767, -32768),
                  (this[r] = 255 & t),
                  (this[r + 1] = t >>> 8),
                  r + 2
                );
              }),
              (r.prototype.writeInt16BE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 2, 32767, -32768),
                  (this[r] = t >>> 8),
                  (this[r + 1] = 255 & t),
                  r + 2
                );
              }),
              (r.prototype.writeInt32LE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 4, 2147483647, -2147483648),
                  (this[r] = 255 & t),
                  (this[r + 1] = t >>> 8),
                  (this[r + 2] = t >>> 16),
                  (this[r + 3] = t >>> 24),
                  r + 4
                );
              }),
              (r.prototype.writeInt32BE = function (t, r, e) {
                return (
                  (t = +t),
                  (r >>>= 0),
                  e || R(this, t, r, 4, 2147483647, -2147483648),
                  t < 0 && (t = 4294967295 + t + 1),
                  (this[r] = t >>> 24),
                  (this[r + 1] = t >>> 16),
                  (this[r + 2] = t >>> 8),
                  (this[r + 3] = 255 & t),
                  r + 4
                );
              }),
              (r.prototype.writeFloatLE = function (t, r, e) {
                return P(this, t, r, !0, e);
              }),
              (r.prototype.writeFloatBE = function (t, r, e) {
                return P(this, t, r, !1, e);
              }),
              (r.prototype.writeDoubleLE = function (t, r, e) {
                return j(this, t, r, !0, e);
              }),
              (r.prototype.writeDoubleBE = function (t, r, e) {
                return j(this, t, r, !1, e);
              }),
              (r.prototype.copy = function (t, e, n, i) {
                if (!r.isBuffer(t))
                  throw new TypeError("argument should be a Buffer");
                if (
                  (n || (n = 0),
                  i || 0 === i || (i = this.length),
                  e >= t.length && (e = t.length),
                  e || (e = 0),
                  i > 0 && i < n && (i = n),
                  i === n)
                )
                  return 0;
                if (0 === t.length || 0 === this.length) return 0;
                if (e < 0) throw new RangeError("targetStart out of bounds");
                if (n < 0 || n >= this.length)
                  throw new RangeError("Index out of range");
                if (i < 0) throw new RangeError("sourceEnd out of bounds");
                i > this.length && (i = this.length),
                  t.length - e < i - n && (i = t.length - e + n);
                var o = i - n;
                if (
                  this === t &&
                  "function" == typeof Uint8Array.prototype.copyWithin
                )
                  this.copyWithin(e, n, i);
                else if (this === t && n < e && e < i)
                  for (var f = o - 1; f >= 0; --f) t[f + e] = this[f + n];
                else Uint8Array.prototype.set.call(t, this.subarray(n, i), e);
                return o;
              }),
              (r.prototype.fill = function (t, e, n, i) {
                if ("string" == typeof t) {
                  if (
                    ("string" == typeof e
                      ? ((i = e), (e = 0), (n = this.length))
                      : "string" == typeof n && ((i = n), (n = this.length)),
                    void 0 !== i && "string" != typeof i)
                  )
                    throw new TypeError("encoding must be a string");
                  if ("string" == typeof i && !r.isEncoding(i))
                    throw new TypeError("Unknown encoding: " + i);
                  if (1 === t.length) {
                    var o = t.charCodeAt(0);
                    (("utf8" === i && o < 128) || "latin1" === i) && (t = o);
                  }
                } else
                  "number" == typeof t
                    ? (t &= 255)
                    : "boolean" == typeof t && (t = Number(t));
                if (e < 0 || this.length < e || this.length < n)
                  throw new RangeError("Out of range index");
                if (n <= e) return this;
                var f;
                if (
                  ((e >>>= 0),
                  (n = void 0 === n ? this.length : n >>> 0),
                  t || (t = 0),
                  "number" == typeof t)
                )
                  for (f = e; f < n; ++f) this[f] = t;
                else {
                  var u = r.isBuffer(t) ? t : r.from(t, i),
                    s = u.length;
                  if (0 === s)
                    throw new TypeError(
                      'The value "' + t + '" is invalid for argument "value"'
                    );
                  for (f = 0; f < n - e; ++f) this[f + e] = u[f % s];
                }
                return this;
              });
            var k = /[^+/0-9A-Za-z-_]/g;
            function _(t, r) {
              var e;
              r = r || 1 / 0;
              for (var n = t.length, i = null, o = [], f = 0; f < n; ++f) {
                if ((e = t.charCodeAt(f)) > 55295 && e < 57344) {
                  if (!i) {
                    if (e > 56319) {
                      (r -= 3) > -1 && o.push(239, 191, 189);
                      continue;
                    }
                    if (f + 1 === n) {
                      (r -= 3) > -1 && o.push(239, 191, 189);
                      continue;
                    }
                    i = e;
                    continue;
                  }
                  if (e < 56320) {
                    (r -= 3) > -1 && o.push(239, 191, 189), (i = e);
                    continue;
                  }
                  e = 65536 + (((i - 55296) << 10) | (e - 56320));
                } else i && (r -= 3) > -1 && o.push(239, 191, 189);
                if (((i = null), e < 128)) {
                  if ((r -= 1) < 0) break;
                  o.push(e);
                } else if (e < 2048) {
                  if ((r -= 2) < 0) break;
                  o.push((e >> 6) | 192, (63 & e) | 128);
                } else if (e < 65536) {
                  if ((r -= 3) < 0) break;
                  o.push(
                    (e >> 12) | 224,
                    ((e >> 6) & 63) | 128,
                    (63 & e) | 128
                  );
                } else {
                  if (!(e < 1114112)) throw new Error("Invalid code point");
                  if ((r -= 4) < 0) break;
                  o.push(
                    (e >> 18) | 240,
                    ((e >> 12) & 63) | 128,
                    ((e >> 6) & 63) | 128,
                    (63 & e) | 128
                  );
                }
              }
              return o;
            }
            function N(t) {
              return n.toByteArray(
                (function (t) {
                  if (
                    (t = (t = t.split("=")[0]).trim().replace(k, "")).length < 2
                  )
                    return "";
                  for (; t.length % 4 != 0; ) t += "=";
                  return t;
                })(t)
              );
            }
            function z(t, r, e, n) {
              for (
                var i = 0;
                i < n && !(i + e >= r.length || i >= t.length);
                ++i
              )
                r[i + e] = t[i];
              return i;
            }
            function D(t, r) {
              return (
                t instanceof r ||
                (null != t &&
                  null != t.constructor &&
                  null != t.constructor.name &&
                  t.constructor.name === r.name)
              );
            }
            function q(t) {
              return t != t;
            }
            var F = (function () {
              for (var t = new Array(256), r = 0; r < 16; ++r)
                for (var e = 16 * r, n = 0; n < 16; ++n)
                  t[e + n] = "0123456789abcdef"[r] + "0123456789abcdef"[n];
              return t;
            })();
          }.call(this, t("buffer").Buffer));
        },
        { "base64-js": 1, buffer: 2, ieee754: 3 },
      ],
      3: [
        function (t, r, e) {
          (e.read = function (t, r, e, n, i) {
            var o,
              f,
              u = 8 * i - n - 1,
              s = (1 << u) - 1,
              a = s >> 1,
              h = -7,
              c = e ? i - 1 : 0,
              l = e ? -1 : 1,
              p = t[r + c];
            for (
              c += l, o = p & ((1 << -h) - 1), p >>= -h, h += u;
              h > 0;
              o = 256 * o + t[r + c], c += l, h -= 8
            );
            for (
              f = o & ((1 << -h) - 1), o >>= -h, h += n;
              h > 0;
              f = 256 * f + t[r + c], c += l, h -= 8
            );
            if (0 === o) o = 1 - a;
            else {
              if (o === s) return f ? NaN : (1 / 0) * (p ? -1 : 1);
              (f += Math.pow(2, n)), (o -= a);
            }
            return (p ? -1 : 1) * f * Math.pow(2, o - n);
          }),
            (e.write = function (t, r, e, n, i, o) {
              var f,
                u,
                s,
                a = 8 * o - i - 1,
                h = (1 << a) - 1,
                c = h >> 1,
                l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                p = n ? 0 : o - 1,
                y = n ? 1 : -1,
                g = r < 0 || (0 === r && 1 / r < 0) ? 1 : 0;
              for (
                r = Math.abs(r),
                  isNaN(r) || r === 1 / 0
                    ? ((u = isNaN(r) ? 1 : 0), (f = h))
                    : ((f = Math.floor(Math.log(r) / Math.LN2)),
                      r * (s = Math.pow(2, -f)) < 1 && (f--, (s *= 2)),
                      (r += f + c >= 1 ? l / s : l * Math.pow(2, 1 - c)) * s >=
                        2 && (f++, (s /= 2)),
                      f + c >= h
                        ? ((u = 0), (f = h))
                        : f + c >= 1
                        ? ((u = (r * s - 1) * Math.pow(2, i)), (f += c))
                        : ((u = r * Math.pow(2, c - 1) * Math.pow(2, i)),
                          (f = 0)));
                i >= 8;
                t[e + p] = 255 & u, p += y, u /= 256, i -= 8
              );
              for (
                f = (f << i) | u, a += i;
                a > 0;
                t[e + p] = 255 & f, p += y, f /= 256, a -= 8
              );
              t[e + p - y] |= 128 * g;
            });
        },
        {},
      ],
      4: [
        function (t, r, e) {
          (function (t) {
            "use strict";
            var e =
                t.from ||
                function () {
                  switch (arguments.length) {
                    case 1:
                      return new t(arguments[0]);
                    case 2:
                      return new t(arguments[0], arguments[1]);
                    case 3:
                      return new t(arguments[0], arguments[1], arguments[2]);
                    default:
                      throw new Exception("unexpected call.");
                  }
                },
              n =
                (t.alloc,
                t.allocUnsafe ||
                  function (r) {
                    return new t(r);
                  }),
              i =
                "undefined" == typeof Uint8Array
                  ? function (t) {
                      return new Array(t);
                    }
                  : function (t) {
                      return new Uint8Array(t);
                    },
              o = String.fromCharCode(0),
              f = o + o + o + o,
              u = "z".charCodeAt(0),
              s = ("u".charCodeAt(0), "<~".length),
              a = e("<~").readUInt16BE(0),
              h = "~>".length,
              c = e("~>").readUInt16BE(0),
              l = "y".charCodeAt(0),
              p = (function () {
                var t,
                  r = new Array(85);
                for (t = 0; t < 85; t++) r[t] = String.fromCharCode(33 + t);
                return r;
              })(),
              y = (function () {
                var t,
                  r = new Array(256);
                for (t = 0; t < 85; t++) r[33 + t] = t;
                return r;
              })();
            function g(t) {
              var r;
              (t = t || {}),
                (this._options = t),
                Array.isArray(t.table) &&
                  ((r = []),
                  t.table.forEach(function (t, e) {
                    r[t.charCodeAt(0)] = e;
                  }),
                  (t.encodingTable = t.table),
                  (t.decodingTable = r));
            }
            var d = (r.exports = new g());
            (g.prototype.encode = function (r, o) {
              var f,
                u,
                a,
                c,
                l,
                y,
                g,
                d,
                w,
                v,
                b,
                m,
                E = i(5),
                A = r,
                B = this._options;
              for (
                "string" == typeof A
                  ? (A = e(A, "binary"))
                  : A instanceof t || (A = e(A)),
                  o = o || {},
                  Array.isArray(o)
                    ? ((a = o),
                      (c = B.delimiter || !1),
                      (l = B.groupSpace || !1))
                    : ((a = o.table || B.encodingTable || p),
                      (c =
                        void 0 === o.delimiter
                          ? B.delimiter || !1
                          : !!o.delimiter),
                      (l =
                        void 0 === o.groupSpace
                          ? B.groupSpace || !1
                          : !!o.groupSpace)),
                  u = 0,
                  b = Math.ceil((5 * A.length) / 4) + 4 + (c ? s + h : 0),
                  f = n(b),
                  c && (u += f.write("<~", u)),
                  d = y = g = 0,
                  b = A.length;
                d < b;
                d++
              )
                if (((g *= 256), (g += A.readUInt8(d)), !(++y % 4))) {
                  if (l && 538976288 === g) u += f.write("y", u);
                  else if (g) {
                    for (w = 4; w >= 0; w--)
                      (v = g % 85), (E[w] = v), (g = (g - v) / 85);
                    for (w = 0; w < 5; w++) u += f.write(a[E[w]], u);
                  } else u += f.write("z", u);
                  (g = 0), (y = 0);
                }
              if (y)
                if (g) {
                  for (m = 4 - y, d = 4 - y; d > 0; d--) g *= 256;
                  for (w = 4; w >= 0; w--)
                    (v = g % 85), (E[w] = v), (g = (g - v) / 85);
                  for (w = 0; w < 5; w++) u += f.write(a[E[w]], u);
                  u -= m;
                } else for (d = 0; d < y + 1; d++) u += f.write(a[0], u);
              return c && (u += f.write("~>", u)), f.slice(0, u);
            }),
              (g.prototype.decode = function (r, i) {
                var o,
                  p,
                  g,
                  d,
                  w,
                  v,
                  b,
                  m,
                  E,
                  A,
                  B,
                  U = this._options,
                  I = r;
                if (
                  ((i = i || U.decodingTable || y),
                  Array.isArray(i) ||
                    ((i = i.table || i),
                    Array.isArray(i) ||
                      ((E = []),
                      Object.keys(i).forEach(function (t) {
                        E[t.charCodeAt(0)] = i[t];
                      }),
                      (i = E))),
                  (o = !i[u]),
                  (p = !i[l]),
                  I instanceof t || (I = e(I)),
                  (E = 0),
                  o || p)
                )
                  for (b = 0, A = I.length; b < A; b++)
                    (m = I.readUInt8(b)),
                      o && m === u && E++,
                      p && m === l && E++;
                if (
                  ((d = 0),
                  (A = Math.ceil((4 * I.length) / 5) + 4 * E + 5),
                  (g = n(A)),
                  I.length >= s + h && I.readUInt16BE(0) === a)
                ) {
                  for (b = I.length - h; b > s && I.readUInt16BE(b) !== c; b--);
                  if (b <= s)
                    throw new Error("Invalid ascii85 string delimiter pair.");
                  I = I.slice(s, b);
                }
                for (b = w = v = 0, A = I.length; b < A; b++)
                  (m = I.readUInt8(b)),
                    o && m === u
                      ? (d += g.write(f, d))
                      : p && m === l
                      ? (d += g.write("    ", d))
                      : void 0 !== i[m] &&
                        ((v *= 85),
                        (v += i[m]),
                        ++w % 5 ||
                          ((d = g.writeUInt32BE(v, d)), (v = 0), (w = 0)));
                if (w) {
                  for (B = 5 - w, b = 0; b < B; b++) (v *= 85), (v += 84);
                  for (b = 3, A = B - 1; b > A; b--)
                    d = g.writeUInt8((v >>> (8 * b)) & 255, d);
                }
                return g.slice(0, d);
              }),
              (d.ZeroMQ = new g({
                table: [
                  "0",
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "a",
                  "b",
                  "c",
                  "d",
                  "e",
                  "f",
                  "g",
                  "h",
                  "i",
                  "j",
                  "k",
                  "l",
                  "m",
                  "n",
                  "o",
                  "p",
                  "q",
                  "r",
                  "s",
                  "t",
                  "u",
                  "v",
                  "w",
                  "x",
                  "y",
                  "z",
                  "A",
                  "B",
                  "C",
                  "D",
                  "E",
                  "F",
                  "G",
                  "H",
                  "I",
                  "J",
                  "K",
                  "L",
                  "M",
                  "N",
                  "O",
                  "P",
                  "Q",
                  "R",
                  "S",
                  "T",
                  "U",
                  "V",
                  "W",
                  "X",
                  "Y",
                  "Z",
                  ".",
                  "-",
                  ":",
                  "+",
                  "=",
                  "^",
                  "!",
                  "/",
                  "*",
                  "?",
                  "&",
                  "<",
                  ">",
                  "(",
                  ")",
                  "[",
                  "]",
                  "{",
                  "}",
                  "@",
                  "%",
                  "$",
                  "#",
                ],
              })),
              (d.PostScript = new g({ delimiter: !0 })),
              (d.Ascii85 = g);
          }.call(this, t("buffer").Buffer));
        },
        { buffer: 2 },
      ],
    },
    {},
    [4]
  )(4);
});
